<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE.txt
 *
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This software is designed to work with Magento community edition and
 * its use on an edition other than specified is prohibited. aheadWorks does not
 * provide extension support in case of incorrect edition use.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Advancednewsletter
 * @version    2.4.7
 * @copyright  Copyright (c) 2010-2012 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE.txt
 */
?><?php /** @var AW_Advancednewsletter_Block_Adminhtml_Form_Element_Testconnection $this */?>
<div>
    <button onclick="testConnection();" class="scalable" type="button" id="test_gateway_connection">
        <span>
            <?php echo Mage::helper('advancednewsletter')->__('Test connection'); ?>
        </span>
    </button>
    &nbsp;<span id="aw_script_answer"></span>

    <script type="text/javascript">
        var states = [];
<?php if (count($states = $this->getStateObjects())): ?>
    <?php foreach ($states as $state): ?>
                states[<?php echo $state->getValue() ?>] = '<?php echo $this->renderStateHtml($state->getLabel(), $state->getColor()); ?>';
    <?php endforeach; ?>
<?php endif; ?>

    var callInProgress = function(xmlhttp) {
        switch (xmlhttp.readyState) {
            case 1:
            case 2:
            case 3:
                return true;
                break;
            // Case 4 and 0
        default:
            return false;
            break;
    }
};

var testConnection = function() {

    var loader_id = 'loading-mask';
    var aw_an_dest=$('aw_script_answer');
    
    var def_str = 'server_name=' + encodeURIComponent($('server_name').value)
        + '&port=' + encodeURIComponent($('port').value)
        + '&usessl=' + encodeURIComponent($('usessl').value)
        + '&user_name=' + encodeURIComponent($('user_name').value )
        + '&password=' + encodeURIComponent($('password').value)
    ;

    var ajaxUrl = '<?php echo $this->getUrl('adminhtml/awadvancednewsletter_smtp/testconnection'); ?>';
    
    ajaxUrl = ajaxUrl.replace(/^http[s]{0,1}/, window.location.href.replace(/:[^:].*$/i, ''));

    Ajax.Responders.register({
        onCreate: function(request) {
            request['awTimeoutId'] = window.setTimeout(
            function() {
                if (callInProgress(request.transport)) {
                    request.transport.abort();
                    if (request.options['onFailure']) {
                        request.options['onFailure'](request.transport, request.json);
                    }
                }
            },
            10000  //Ten seconds
        );
        },
        onComplete: function(request) {
            window.clearTimeout(request['awTimeoutId']);
        }
    });

    
    new Ajax.Request(ajaxUrl + (ajaxUrl.match(new RegExp('\\?')) ? '&ajax=true' : '?ajax=true' ), {
        method:'post',
        parameters: def_str,
        onCreate: function(obj) {
            Element.show(loader_id);
            aw_an_dest.innerHTML = '';
        },
        onFailure: function () {
            aw_an_dest.innerHTML = states[0];
        },
        onComplete: function (transport) {
            Element.hide(loader_id);
        },
        onSuccess: function(transport) {
            try {
                if (transport.responseText.isJSON()) {
                    var response = transport.responseText.evalJSON();
                    if (response.result) {
                        aw_an_dest.innerHTML = states[response.result];
                    }else{
                        aw_an_dest.innerHTML = states[response.result];
                    }
                }
            }
            catch (e) {
            }
        }
    });
}
    </script>
</div>